# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files in version control:
#  - .idea/modules.xml
#  - .idea/*.iml
#  - .idea/misc.xml
#  - .idea/vcs.xml
#  - .idea/workspace.xml
#  - .idea/tasks.xml
#  - .idea/usage.statistics.xml
#  - .idea/shelf
#  - .idea/dictionaries
#  - .idea/runConfigurations
#  - .idea/inspectionProfiles
#  - .idea/codeStyles
#  - .idea/fileTemplates
#  - .idea/toolbox.xml
#  - .idea/artifacts
#  - .idea/compiler.xml
#  - .idea/libraries
#  - .idea/jarRepositories.xml
#  - .idea/encodings.xml
#  - .idea/shelf
#  - .idea/dictionaries
#  - .idea/runConfigurations
#  - .idea/inspectionProfiles
#  - .idea/codeStyles
#  - .idea/fileTemplates
#  - .idea/toolbox.xml
#  - .idea/artifacts
#  - .idea/compiler.xml
#  - .idea/libraries
#  - .idea/jarRepositories.xml
#  - .idea/encodings.xml
.idea/

# VS Code
.vscode/

# Model files and weights (large files)
*.pth
*.pt
*.pkl
*.h5
*.hdf5
*.onnx
*.pb
*.tflite
*.weights
*.model
*.bin
*.safetensors

# Dataset files
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.tif
*.mp4
*.avi
*.mov
*.mkv
*.flv
*.webm
*.wmv
*.m4v
*.3gp
*.ogv
*.ogg
*.wav
*.mp3
*.flac
*.aac
*.wma
*.m4a
*.opus
*.csv
*.json
*.xml
*.yaml
*.yml
*.txt
*.log
*.zip
*.tar
*.gz
*.rar
*.7z
*.bz2
*.xz

# Keep specific example images
!**/assets/examples/*.jpg
!**/assets/examples/*.jpeg
!**/assets/examples/*.png
!**/assets/examples/*.gif
!**/assets/examples/*.bmp
!**/assets/examples/*.tiff
!**/assets/examples/*.tif
!**/assets/examples/*.mp4
!**/assets/examples/*.avi
!**/assets/examples/*.mov
!**/assets/examples/*.mkv
!**/assets/examples/*.flv
!**/assets/examples/*.webm
!**/assets/examples/*.wmv
!**/assets/examples/*.m4v
!**/assets/examples/*.3gp
!**/assets/examples/*.ogv
!**/assets/examples/*.ogg
!**/assets/examples/*.wav
!**/assets/examples/*.mp3
!**/assets/examples/*.flac
!**/assets/examples/*.aac
!**/assets/examples/*.wma
!**/assets/examples/*.m4a
!**/assets/examples/*.opus
!**/assets/examples/*.csv
!**/assets/examples/*.json
!**/assets/examples/*.xml
!**/assets/examples/*.yaml
!**/assets/examples/*.yml
!**/assets/examples/*.txt
!**/assets/examples/*.log
!**/assets/examples/*.zip
!**/assets/examples/*.tar
!**/assets/examples/*.gz
!**/assets/examples/*.rar
!**/assets/examples/*.7z
!**/assets/examples/*.bz2
!**/assets/examples/*.xz

# Keep specific model files
!yolov5s.pt
!depth_anything_v2_vits.pth

# Output directories
output/
runs/
results/
logs/
checkpoints/
models/
weights/
saved_models/
experiments/
artifacts/

# Docker
.dockerignore
docker-compose.override.yml

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Backup files
*.bak
*.backup
*.old

# Configuration files with sensitive data
config.ini
secrets.json
.env.local
.env.production
.env.staging

# Node.js (for React app)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# React build files
build/
dist/

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# Local environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# MLflow
mlruns/
mlflow.db

# Weights & Biases
wandb/

# TensorBoard
runs/
logs/

# Jupyter
.ipynb_checkpoints/

# PyTorch Lightning
lightning_logs/

# Sacred
sacred/

# Optuna
optuna.db

# Ray
ray_results/

# DVC
.dvc/
dvc.lock

# Git LFS
.git/lfs/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# Kubernetes
*.kubeconfig

# Helm
charts/*.tgz

# Docker
.dockerignore

# Local development
local/
dev/ 